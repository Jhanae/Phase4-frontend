{"ast":null,"code":"var _jsxFileName = \"/Users/jhanaechisholm/Phase-4/Project/project-frontend/src/Components/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart({\n  profileID,\n  products,\n  setProductID,\n  productID\n}) {\n  _s();\n\n  const [cartItem, setCartItem] = useState([]);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      backgroundImage: `url(\"https://images.pexels.com/photos/1229861/pexels-photo-1229861.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\")`,\n      minHeight: '100vh',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover'\n    }\n  }));\n  const classes = useStyles();\n  const API = \"http://localhost:3000/cart_items\";\n  useEffect(() => {\n    async function fetchProducts() {\n      const result = await fetch(API);\n      const items = await result.json();\n      setCartItem([...items]);\n    }\n\n    fetchProducts();\n  }, []);\n  const userCart = cartItem.filter(item => item.profile_id === profileID);\n  userCart.map(item => setProductID([...item.product_id]));\n  const item = products.filter(item => item.id === productID);\n  console.log(userCart);\n  const cartCard = item.map(item => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: item.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"$\", item.price, \".00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClick(item),\n          variant: \"primary\",\n          children: \"Remove from Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }, this);\n  });\n\n  async function handleClick(item) {\n    // history.push('/cart')\n    const res = await fetch(`http://localhost:3000/cart_items/${item.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        profile_id: profileID,\n        product_id: item.id\n      })\n    });\n    const items = await res.json();\n\n    if (res.ok) {\n      console.log(\"CartItem created: \", item);\n    } else {\n      console.log(\"Error:\", item.Errors);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: \"Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), cartCard]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cart, \"KNDRzwV81JGlqoF7awt5HmmJDWw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/jhanaechisholm/Phase-4/Project/project-frontend/src/Components/Cart.js"],"names":["React","makeStyles","useEffect","useState","Card","Button","useHistory","Cart","profileID","products","setProductID","productID","cartItem","setCartItem","useStyles","theme","root","backgroundImage","minHeight","backgroundRepeat","backgroundSize","classes","API","fetchProducts","result","fetch","items","json","userCart","filter","item","profile_id","map","product_id","id","console","log","cartCard","width","image","name","price","handleClick","res","method","headers","body","JSON","stringify","ok","Errors","title"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles';\nimport { useEffect, useState } from 'react'\nimport { Card, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nfunction Cart({ profileID, products, setProductID, productID }) {\n    const [cartItem, setCartItem] = useState([])\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            backgroundImage: `url(\"https://images.pexels.com/photos/1229861/pexels-photo-1229861.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\")`,\n            minHeight: '100vh',\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n        },\n    }));\n    const classes = useStyles()\n    const API = \"http://localhost:3000/cart_items\"\n    useEffect(() => {\n        async function fetchProducts(){\n          const result = await fetch(API);\n          const items = await result.json();\n          setCartItem([...items])\n        }\n        fetchProducts()\n        \n      }, [])\n      const userCart = cartItem.filter(item => item.profile_id === profileID)\n      userCart.map(item => setProductID([...item.product_id]))\n      const item = products.filter(item => item.id === productID)\n      console.log(userCart)\n      const cartCard = item.map(item => {\n          return <Card style={{ width: '18rem' }}>\n          <Card.Img variant=\"top\" src={item.image} />\n          <Card.Body>\n            <Card.Title>{item.name}</Card.Title>\n            <Card.Text>\n              ${item.price}.00\n            </Card.Text>\n            <Button onClick={handleClick(item)} variant=\"primary\">Remove from Cart</Button>\n          </Card.Body>\n        </Card>\n      })\n\n      async function handleClick(item){\n        // history.push('/cart')\n        const res = await fetch(`http://localhost:3000/cart_items/${item.id}`,{\n            method: \"DELETE\",\n            headers: {\"Content-Type\" : \"application/json\"},\n            body: JSON.stringify({\n                profile_id: profileID,\n                product_id: item.id\n            })\n        })\n        const items = await res.json();\n        if(res.ok){\n        console.log(\"CartItem created: \", item)\n      }\n      else{\n          console.log(\"Error:\", item.Errors)\n      }\n    }\n    return (\n        <div>\n            <br/><br/><br/><br/><br/>\n            <h1 className={classes.title}>Cart</h1>\n            {cartCard}\n        </div>\n    )\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}